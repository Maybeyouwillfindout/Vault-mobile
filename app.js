
// v2.4: Auto-login with fixed master password "test1234"
const FIXED_PASSWORD = "test1234";

const textEncoder=new TextEncoder(),textDecoder=new TextDecoder();
async function deriveKey(e,t){const n=await crypto.subtle.importKey("raw",textEncoder.encode(e),"PBKDF2",!1,["deriveKey"]);return crypto.subtle.deriveKey({name:"PBKDF2",salt:t,iterations:200000,hash:"SHA-256"},n,{name:"AES-GCM",length:256},!1,["encrypt","decrypt"])}
function b64(e){return btoa(String.fromCharCode(...new Uint8Array(e)))}function ub64(e){return Uint8Array.from(atob(e),(e=>e.charCodeAt(0)))}
async function encryptJSON(e,t){const n=crypto.getRandomValues(new Uint8Array(12)),a=textEncoder.encode(JSON.stringify(t)),o=await crypto.subtle.encrypt({name:"AES-GCM",iv:n},e,a);return{iv:b64(n),ct:b64(o)}}
async function decryptJSON(e,t){const n=ub64(t.iv),a=ub64(t.ct),o=await crypto.subtle.decrypt({name:"AES-GCM",iv:n},e,a);return JSON.parse(textDecoder.decode(o))}
function idb(){return new Promise(((e,t)=>{const n=indexedDB.open("vault-db",6);n.onupgradeneeded=()=>{const e=n.result;e.objectStoreNames.contains("meta")||e.createObjectStore("meta"),e.objectStoreNames.contains("tx")||e.createObjectStore("tx",{keyPath:"id",autoIncrement:!0}),e.objectStoreNames.contains("rules")||e.createObjectStore("rules",{keyPath:"id",autoIncrement:!0})},n.onsuccess=(()=>e(n.result)),n.onerror=(()=>t(n.error))}))}
async function metaSet(e,t){const n=await idb(),a=n.transaction("meta","readwrite");return a.objectStore("meta").put(t,e),a.complete}
async function metaGet(e){const t=await idb(),n=t.transaction("meta","readonly");return new Promise((e=>{const t=n.objectStore("meta").get(e);t.onsuccess=(()=>e(t.result)),t.onerror=(()=>e(void 0))}))}
async function txAdd(e){const t=await idb(),n=t.transaction("tx","readwrite");return n.objectStore("tx").add(e),n.complete}
async function txPut(e,t){const n=await idb(),a=n.transaction("tx","readwrite");return a.objectStore("tx").put(Object.assign({id:e},t)),a.complete}
async function txAllRaw(){const e=await idb(),t=e.transaction("tx","readonly");return new Promise((e=>{const n=t.objectStore("tx").getAll();n.onsuccess=(()=>e(n.result)),n.onerror=(()=>e([]))}))}
async function rulesAll(){const e=await idb(),t=e.transaction("rules","readonly");return new Promise((e=>{const n=t.objectStore("rules").getAll();n.onsuccess=(()=>e(n.result||[])),n.onerror=(()=>e([]))}))}
async function ruleAdd(e,t,n,a){const o=await idb(),r=o.transaction("rules","readwrite");return r.objectStore("rules").add({pattern:e,min:t,max:n,category:a}),r.complete}
async function ruleDelete(e){const t=await idb(),n=t.transaction("rules","readwrite");return n.objectStore("rules").delete(e),n.complete}
let aesKey=null,salt=null;async function ensureSalt(){let e=await metaGet("salt");if(!e){const t=crypto.getRandomValues(new Uint8Array(16));e=b64(t),await metaSet("salt",e)}return ub64(e)}
async function autoLogin(){salt=await ensureSalt(),aesKey=await deriveKey(FIXED_PASSWORD,salt);const e=await metaGet("marker");if(!e){const e=await encryptJSON(aesKey,{ok:!0,createdAt:Date.now()});await metaSet("marker",e)}}
function parseAmount(e){if("string"!=typeof e)return Number(e||0);const t=e.replace(/\s/g,"").replace(/\./g,"").replace(",",".");return t.includes("%")?0:parseFloat(t)||0}
async function addTx(e,t,n,a){const o=await encryptJSON(aesKey,{date:e,description:t,amount:parseAmount(n),category:a});await txAdd(o)}
async function listTxDecrypted(){const e=await txAllRaw(),t=[];for(const n of e)try{t.push({id:n.id,...await decryptJSON(aesKey,n)})}catch{}return t.reverse()}
function renderRows(e){const t=document.getElementById("tbody");t.innerHTML=e.map((e=>`\n<tr><td>${e.date||""}</td><td>${e.description||""}</td><td>${e.category||""}</td><td class="right">${(e.amount||0).toFixed(2)} CHF</td></tr>`)).join("");const n=e.reduce(((e,t)=>e+(t.amount||0)),0);document.getElementById("sum").textContent=n.toFixed(2)}
function monthFilter(e,t){if(!t)return e;const[n,a]=t.split("-").map((e=>parseInt(e,10)));return e.filter((e=>{if(!e.date)return!1;const t=new Date(e.date);return t.getFullYear()===n&&t.getMonth()+1===a}))}
function renderCategorySummary(e){const t=document.getElementById("cat-body"),n=document.getElementById("cat-sum"),a=new Map;for(const t of e){const e=(t.category||"—").trim()||"—";a.set(e,(a.get(e)||0)+(t.amount||0))}const o=Array.from(a.entries()).sort(((e,t)=>Math.abs(t[1])-Math.abs(e[1])));t.innerHTML=o.map((e=>`<tr><td>${e[0]}</td><td class="right">${e[1].toFixed(2)} CHF</td></tr>`)).join("")||"<tr><td colspan='2' class='muted'>Keine Daten</td></tr>";const r=o.reduce(((e,t)=>e+t[1]),0);n.textContent=r.toFixed(2)}
function parseCSV(e,t){const n=e.split(/\r?\n/).filter((e=>e.trim().length));if(!n.length)return[];const a=n[0].split(t).map((e=>e.trim()));return n.slice(1).map((e=>{const t=e.split(t),n={};return a.forEach(((e,a)=>n[e]=t[a])),n}))}
function parsePasted(e,t,n){const a=e.split(/\r?\n/).filter((e=>e.trim().length)),o=[];for(const e of a){const a=e.split(t),r={date:a[n.date]||"",description:a[n.desc]||"",amount:a[n.amount]||"0"};""!==n.cat&&null!=n.cat&&(r.category=a[n.cat]||""),o.push(r)}return o}
function compilePattern(e){if((e=(e||"").trim())&&!e.startsWith("/")||!e.endsWith("/")){const t=e.replace(/[.*+?^${}()|[\]\\]/g,"\\$&");return new RegExp(t,"i")}try{return new RegExp(e.slice(1,-1),"i")}catch{return null}}
async function rulesAllWithDefaults(){const e=await rulesAll();return e}
async function applyRulesTo(e){const t=await rulesAllWithDefaults();for(const n of e){if(n.category&&n.category.trim())continue;for(const e of t){const t=compilePattern(e.pattern);if(!t)continue;if(t.test(n.description||"")){const t=n.amount||0;if(null!=e.min&&""!==e.min&&!(t>=parseAmount(e.min)))continue;if(null!=e.max&&""!==e.max&&!(t<=parseAmount(e.max)))continue;n.category=e.category;break}}}return e}
async function saveBack(e){for(const t of e){const n=await encryptJSON(aesKey,{date:t.date,description:t.description,amount:t.amount,category:t.category});await txPut(t.id,n)}}
async function refreshAll(){const e=await listTxDecrypted();renderRows(e);const t=document.getElementById("month").value,n=monthFilter(e,t);renderCategorySummary(n),renderRuleTable(await rulesAll())}
function renderRuleTable(e){const t=document.getElementById("rule-body");t.innerHTML=e.map((e=>`\n<tr><td>${e.pattern}</td><td>${e.min||""}</td><td>${e.max||""}</td><td>${e.category}</td><td class="right"><button data-del="${e.id}" class="ghost">Löschen</button></td></tr>`)).join("")||"<tr><td colspan='5' class='muted'>Noch keine Regeln</td></tr>",t.querySelectorAll("button[data-del]").forEach((t=>{t.onclick=async()=>{await ruleDelete(parseInt(t.dataset.del,10)),refreshAll()}}))}
function extractLines(e,t){const n=e.split(/\r?\n/).map((e=>e.trim())).filter((e=>e.length>0));const a=t;let o=[];for(const e of n){let t=null;/\d{4}-\d{2}-\d{2}/.test(e)?t=e.match(/\d{4}-\d{2}-\d{2}/)[0]:/\b\d{2}[.\/-]\d{2}[.\/-]\d{4}\b/.test(e)&&(t=e.match(/\b\d{2}[.\/-]\d{2}[.\/-]\d{4}\b/)[0]);const r=(e.match(/[-+]?\d{1,3}(?:[\.\s]\d{3})*(?:[\.,]\d{2})/)||[null])[0];let s=e;t&&(s=s.replace(t,"").trim()),r&&(s=s.replace(r,"").trim());t&&r&&o.push({date:normalizeDate(t,a),description:s,amount:r})}return o}
function normalizeDate(e,t){if("ymd"===t)return e;if("dmy"===t){const[t,n,a]=e.split(/[.\/-]/);return`${a}-${n.padStart(2,"0")}-${t.padStart(2,"0")}`}if(/\d{4}-\d{2}-\d{2}/.test(e))return e;if(/\d{2}[.\/-]\d{2}[.\/-]\d{4}/.test(e)){const[t,n,a]=e.split(/[.\/-]/);return`${a}-${n.padStart(2,"0")}-${t.padStart(2,"0")}`}return e}
window.addEventListener("load",(async()=>{"serviceWorker"in navigator&&await navigator.serviceWorker.register("./sw.js"),await autoLogin(),document.getElementById("screen-auth").classList.add("hidden"),document.getElementById("screen-app").classList.remove("hidden"),refreshAll(),document.getElementById("btn-add").onclick=async()=>{const e=document.getElementById("tx-date").value,t=document.getElementById("tx-desc").value,n=document.getElementById("tx-amount").value,a=document.getElementById("tx-cat").value;await addTx(e,t,n,a),document.getElementById("tx-desc").value="",document.getElementById("tx-amount").value="",document.getElementById("tx-cat").value="",refreshAll()},document.getElementById("btn-import").onclick=async()=>{const e=document.getElementById("csv-file").files[0];if(!e)return alert("Bitte CSV wählen.");const t=document.getElementById("csv-delim").value||",",n=document.getElementById("csv-date").value||"date",a=document.getElementById("csv-desc").value||"description",o=document.getElementById("csv-amount").value||"amount",r=document.getElementById("csv-cat").value||"",s=await e.text(),l=function(e,t){const n=e.split(/\r?\n/).filter((e=>e.trim().length));if(!n.length)return[];const a=n[0].split(t).map((e=>e.trim()));return n.slice(1).map((e=>{const t=e.split(t),n={};return a.forEach(((e,a)=>n[e]=t[a])),n}))}(s,t);for(const e of l)await addTx(e[n]||"",e[a]||"",e[o]||"0",r?e[r]||"": "");refreshAll(),alert("Import abgeschlossen.")},document.getElementById("btn-paste-import").onclick=async()=>{const e=document.getElementById("paste-area").value;if(!e.trim())return alert("Bitte zuerst Text einfügen.");const t=document.getElementById("paste-delim").value||";",n={date:parseInt(document.getElementById("paste-date").value||"0",10),desc:parseInt(document.getElementById("paste-desc").value||"1",10),amount:parseInt(document.getElementById("paste-amount").value||"2",10),cat:""===document.getElementById("paste-cat").value?"":parseInt(document.getElementById("paste-cat").value,10)},a=function(e,t,n){const a=e.split(/\r?\n/).filter((e=>e.trim().length)),o=[];for(const e of a){const a=e.split(t),r={date:a[n.date]||"",description:a[n.desc]||"",amount:a[n.amount]||"0"};""!==n.cat&&null!=n.cat&&(r.category=a[n.cat]||""),o.push(r)}return o}(e,t,n);for(const e of a)await addTx(e.date,e.description,e.amount,e.category||"");refreshAll(),alert("Einfügen & Import abgeschlossen.")},document.getElementById("btn-categorize").onclick=async()=>{const e=await listTxDecrypted(),t=await applyRulesTo(e);await saveBack(t),refreshAll()},document.getElementById("btn-add-rule").onclick=async()=>{const e=document.getElementById("rule-pattern").value.trim(),t=document.getElementById("rule-min").value.trim(),n=document.getElementById("rule-max").value.trim(),a=document.getElementById("rule-category").value.trim();if(!e||!a)return alert("Bitte Pattern und Kategorie angeben.");await ruleAdd(e,t,n,a),document.getElementById("rule-pattern").value="",document.getElementById("rule-min").value="",document.getElementById("rule-max").value="",document.getElementById("rule-category").value="",refreshAll()},document.getElementById("month").addEventListener("change",(()=>{refreshAll()})),document.getElementById("btn-alltime").addEventListener("click",(()=>{document.getElementById("month").value="",refreshAll()})),document.getElementById("btn-ocr").onclick=async()=>{const e=document.getElementById("img-file").files[0];if(!e)return alert("Bitte Bild wählen.");const t=document.getElementById("ocr-lang").value||"deu+eng",n=document.getElementById("ocr-datefmt").value||"auto";document.getElementById("ocr-log").textContent="Erkenne Text …";const a=await Tesseract.createWorker(t);const o=await a.recognize(await e.arrayBuffer());await a.terminate();document.getElementById("ocr-log").textContent="OCR abgeschlossen.";const r=extractLines(o.data.text,n),s=document.getElementById("ocr-body");s.innerHTML=r.map((e=>`<tr><td>${e.date}</td><td>${e.description}</td><td class='right'>${parseAmount(e.amount).toFixed(2)}</td></tr>`)).join(""),s.dataset.rows=JSON.stringify(r),document.getElementById("btn-ocr-import").classList.remove("hidden")},document.getElementById("btn-ocr-import").onclick=async()=>{const e=document.getElementById("ocr-body").dataset.rows?JSON.parse(document.getElementById("ocr-body").dataset.rows):[];for(const t of e)await addTx(t.date,t.description,t.amount,"");refreshAll(),alert("OCR-Import abgeschlossen.")})}));
